---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by apple.
--- DateTime: 2018/8/30 下午10:43
---

--- @class Projectile : NewGameObject

Projectile = NewGameObject:extend()

function Projectile:new(area,x,y,opts)
    Projectile.super.new(self,area,x,y,opts)
    self.s = opts.s or 2.5
    self.attack = opts.attack or "Neutral"
    self.damage = attacks[self.attack].damage or 10
    self.v = opts.v or 200
    self.color = attacks[self.attack].color or Color.default
    self.collider = self.area.world:newCircleCollider(self.x,self.y,self.s)
    self.collider:setCollisionClass("Projectile")
    self.collider:setObject(self)
    self.collider:setLinearVelocity(self.v*math.cos(self.r),self.v*math.sin(self.r))
end

function Projectile:update(dt)
    Projectile.super.update(self,dt)
    self.collider:setLinearVelocity(self.v*math.cos(self.r),self.v*math.sin(self.r))
    --if self.x < 0 then self:die() end
    --if self.y < 0 then self:die() end
    --if self.x > gw then self:die() end
    --if self.y > gh then self:die() end
    if self.collider:enter("Enemy") then
        local collision_data = self.collider:getEnterCollisionData("Enemy")
        local object = collision_data.collider:getObject()
        if object then
            if object:is(Rock) then
                object:hit(self.damage)
                self:die()
            end
            if object:is(Shooter) then
                object:hit(self.damage)
                self:die()
            end
            if object:is(BigRock) then
                object:hit(self.damage)
                self:die()
            end
        end
    end
end

function Projectile:draw()
    Projectile.super.draw()
    pushRote(self.x,self.y,Vector(self.collider:getLinearVelocity()):angleTo())
    love.graphics.setLineWidth(self.s - self.s/4)
    love.graphics.setColor(self.color)
    love.graphics.line(self.x - 2 * self.s,self.y,self.x,self.y)
    love.graphics.setColor(Color.default)
    love.graphics.line(self.x,self.y,self.x + 2 * self.s,self.y)
    --love.graphics.setColor(Color.default)
    love.graphics.setLineWidth(1)
    --love.graphics.circle('line',self.x,self.y,self.s)
    love.graphics.pop()
end

function Projectile:die()
    self.dead = true
    self.area:addObject('ProjectileDeathEffect',self.x,self.y,{color = Color.hp,w = 3*self.s})
end