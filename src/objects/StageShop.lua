---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by apple.
--- DateTime: 2018/9/30 下午11:58
---

--- @class StageShop
--- @field world World
--- @field area Area

local suit = require("lib.suit")

StageShop = Object:extend()

function StageShop:new()
    self.area = Area(self)
    self.seller = {name = "seller",items = {},money = 10000,lv = 0,relationship = 0}
    self.buyer = {name = "buyer",items = {},money = 10000}
    self.items_to_buy = {}
    self.items_to_sell = {}
    self.items_to_buy_money = 0
    self.items_to_sell_money = 0
    --- 物品差价，即需要补充的部分，负值表示卖出物品的价值较高
    self.items_money_difference = self.items_to_buy_money - self.items_to_sell_money
    --self.area:addPhysicsWorld()
    --self.area.world:addCollisionClass("Player")
    --self.area.world:addCollisionClass("Projectile",{ignores = {"Projectile","Player"}})
    --self.area.world:addCollisionClass("Collectable",{ignores = {"Collectable","Projectile","Player"}})
    --self.area.world:addCollisionClass("Enemy",{ignores = {"Collectable","Projectile","Player"}})
    --self.area.world:addCollisionClass("EnemyProjectile",{ignores = {"Collectable","Projectile","EnemyProjectile","Enemy"}})
    self.main_canvas = love.graphics.newCanvas(gw,gh)
    --self.player = self.area:addObject("Player",gw/2,gh/2)
    --input:bind("p",function ()
    --    self.area:addObject("Rock",random(32,gw - 32),random(32,gh - 32))
    --end )


end

local input = {text = ""}

function StageShop:update(dt)
    if self.area then self.area:update(dt) end
    --- suit update
    -- put the layout origin at position (100,100)
    -- the layout will grow down and to the right from this point
    suit.layout:reset(100,100)

    -- put an input widget at the layout origin, with a cell size of 200 by 30 pixels
    suit.Input(input, suit.layout:row(200,30))

    -- put a label that displays the text below the first cell
    -- the cell size is the same as the last one (200x30 px)
    -- the label text will be aligned to the left
    suit.Label("Hello, "..input.text, {align = "left"}, suit.layout:row())

    -- put an empty cell that has the same size as the last cell (200x30 px)
    suit.layout:row()

    -- put a button of size 200x30 px in the cell below
    -- if the button is pressed, quit the game
    if suit.Button("Close", suit.layout:row()).hit then
        love.event.quit()
    end
end

function StageShop:draw()
    love.graphics.setCanvas(self.main_canvas)
    love.graphics.clear()
    camera:attach(0,0,sw*gw,sh*gh)
    love.graphics.print("中文")
    if self.area then self.area:draw() end
    love.graphics.rectangle("line",1,1,gw/3 -1 ,gh - 2,8)
    love.graphics.rectangle("line",1 + gw/3,1,gw/3 -1,gh - 2,8)
    love.graphics.rectangle("line",1 + gw * 2/3,1,gw/3 - 1,gh - 2,8)
    ---- suit gui
    suit.draw()

    camera:detach()
    love.graphics.setCanvas()

    love.graphics.setColor(255,255,255,255)
    love.graphics.setBlendMode('alpha','premultiplied')
    love.graphics.draw(self.main_canvas,0,0,0,3,3)
    love.graphics.setBlendMode('alpha')
end

function StageShop:destroy()
    if self.area then
        self.area:destroy()
        self.area = nil
    end
end

function StageShop:finished()
    timer:after(1,function ()
        gotoRoom("Stage","Stage")
    end)
end